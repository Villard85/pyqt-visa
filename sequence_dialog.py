# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'sequence.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

class seq_Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(456, 479)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(Dialog)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.label1 = QtWidgets.QLabel(Dialog)
        self.label1.setObjectName("label1")
        self.gridLayout.addWidget(self.label1, 0, 1, 1, 1)
        self.scanBtn = QtWidgets.QPushButton(Dialog)
        self.scanBtn.setObjectName("scanBtn")
        self.gridLayout.addWidget(self.scanBtn, 1, 0, 1, 1)
        self.devList = QtWidgets.QComboBox(Dialog)
        self.devList.setObjectName("devList")
        self.gridLayout.addWidget(self.devList, 1, 1, 1, 1)
        self.verticalLayout_3.addLayout(self.gridLayout)
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.varNames = QtWidgets.QComboBox(Dialog)
        self.varNames.setObjectName("varNames")
        self.gridLayout_2.addWidget(self.varNames, 1, 1, 1, 1)
        self.commands = QtWidgets.QComboBox(Dialog)
        self.commands.setObjectName("commands")
        self.gridLayout_2.addWidget(self.commands, 1, 2, 1, 1)
        self.label4 = QtWidgets.QLabel(Dialog)
        self.label4.setObjectName("label4")
        self.gridLayout_2.addWidget(self.label4, 0, 2, 1, 1)
        self.label3 = QtWidgets.QLabel(Dialog)
        self.label3.setObjectName("label3")
        self.gridLayout_2.addWidget(self.label3, 0, 1, 1, 1)
        self.idnBtn = QtWidgets.QPushButton(Dialog)
        self.idnBtn.setObjectName("idnBtn")
        self.idlabel = QtWidgets.QLabel(Dialog)
        self.idlabel.setObjectName("idlabel")
        self.idEdit = QtWidgets.QLineEdit(Dialog)
        self.idEdit.setObjectName("idEdit")
        self.id_gridLayout = QtWidgets.QGridLayout()
        self.id_gridLayout.setObjectName("id_gridLayout")
        self.id_gridLayout.addWidget(self.idnBtn, 1, 0, 1, 1)
        self.id_gridLayout.addWidget(self.idlabel, 0, 1, 1, 1)
        self.id_gridLayout.addWidget(self.idEdit, 1, 1, 1, 1)
        self.addBtn = QtWidgets.QPushButton(Dialog)
        self.addBtn.setObjectName("addBtn")
        self.gridLayout_2.addWidget(self.addBtn, 0, 0, 1, 1)
        self.verticalLayout_3.addLayout(self.id_gridLayout)
        self.verticalLayout_3.addLayout(self.gridLayout_2)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.delBtn = QtWidgets.QPushButton(Dialog)
        self.delBtn.setObjectName("delBtn")
        self.verticalLayout.addWidget(self.delBtn)
        self.upBtn = QtWidgets.QPushButton(Dialog)
        self.upBtn.setObjectName("upBtn")
        self.verticalLayout.addWidget(self.upBtn)
        self.downBtn = QtWidgets.QPushButton(Dialog)
        self.downBtn.setObjectName("downBtn")
        self.verticalLayout.addWidget(self.downBtn)
        self.loadBtn = QtWidgets.QPushButton(Dialog)
        self.loadBtn.setObjectName("loadBtn")
        self.verticalLayout.addWidget(self.loadBtn)
        self.saveBtn = QtWidgets.QPushButton(Dialog)
        self.saveBtn.setObjectName("saveBtn")
        self.verticalLayout.addWidget(self.saveBtn)
        self.horizontalLayout.addLayout(self.verticalLayout)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label2 = QtWidgets.QLabel(Dialog)
        self.label2.setObjectName("label2")
        self.verticalLayout_2.addWidget(self.label2)
        self.seqTable = QtWidgets.QTableWidget(Dialog)
        self.seqTable.setObjectName("seqTable")
        self.seqTable.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem('Device address')
        self.seqTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem('Variable name')
        self.seqTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem('Query command')
        self.seqTable.setHorizontalHeaderItem(2, item)
        self.verticalLayout_2.addWidget(self.seqTable)
        self.horizontalLayout.addLayout(self.verticalLayout_2)
        self.verticalLayout_3.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.okBtn = QtWidgets.QPushButton(Dialog)
        self.okBtn.setObjectName("okBtn")
        self.horizontalLayout_2.addWidget(self.okBtn)
        self.cancelBtn = QtWidgets.QPushButton(Dialog)
        self.cancelBtn.setObjectName("cancelBtn")
        self.horizontalLayout_2.addWidget(self.cancelBtn)
        self.verticalLayout_3.addLayout(self.horizontalLayout_2)
        
        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Sequence settings"))
        self.label1.setText(_translate("Dialog", "List of instruments:"))
        self.scanBtn.setText(_translate("Dialog", "Scan"))
        self.label4.setText(_translate("Dialog", "Query command:"))
        self.label3.setText(_translate("Dialog", "Variable Name:"))
        self.addBtn.setText(_translate("Dialog", "Add line"))
        self.idnBtn.setText(_translate("Dialog", "Query IDN"))
        self.idlabel.setText(_translate("Dialog", "IDN Response:"))
        self.delBtn.setText(_translate("Dialog", "Delete line"))
        self.upBtn.setText(_translate("Dialog", "Move Up"))
        self.downBtn.setText(_translate("Dialog", "Move Down"))
        self.loadBtn.setText(_translate("Dialog", "Load sequence"))
        self.saveBtn.setText(_translate("Dialog", "Save Sequence"))
        self.label2.setText(_translate("Dialog", "Sequence table:"))
        self.okBtn.setText(_translate("Dialog", "Confirm"))
        self.cancelBtn.setText(_translate("Dialog", "Cancel"))

class seqDialog (QtWidgets.QDialog, seq_Ui_Dialog):
	def __init__(self, rm):
		super(seqDialog, self).__init__()
		self.setupUi(self)
		
		self.varNames.addItems(['T_Value', 'T_Sensor', 'Voltage', 'Current',
		'Resistivity', 'M_Field', 'V_Hall', 'V_Sample', 'Vxx', 'Vxy', 'R_Sample', 'V_Gate'])
				
		self.rm = rm
		
		self.addBtn.setEnabled(False)
		self.upBtn.setEnabled(False)
		self.downBtn.setEnabled(False)
		self.delBtn.setEnabled(False)
		self.delBtn.setEnabled(False)
		
		self.seqTable.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
		
		self.okBtn.clicked.connect(self.accept)
		self.cancelBtn.clicked.connect(self.reject)
		self.addBtn.clicked.connect(self.onAdd)
		self.upBtn.clicked.connect(self.onUp)
		self.downBtn.clicked.connect(self.onDown)
		self.delBtn.clicked.connect(self.onDel)
		self.loadBtn.clicked.connect(self.onLoad)
		self.saveBtn.clicked.connect(self.onSave)
		self.scanBtn.clicked.connect(self.onScan)
		self.idnBtn.clicked.connect(self.setCommandList)
		# self.devList.currentTextChanged.connect(self.setCommandList)
		
		
	def onAdd(self):
		print('Add button pressed!')
		if self.seqTable.isActiveWindow():
		#if True:
			row = self.seqTable.rowCount()
			self.seqTable.insertRow(row)
			item1 = QtWidgets.QTableWidgetItem(self.devList.currentText())
			item2 = QtWidgets.QTableWidgetItem(self.varNames.currentText())
			item3 = QtWidgets.QTableWidgetItem(self.commands.currentText())
			self.seqTable.setItem(row, 0, item1)
			self.seqTable.setItem(row, 1, item2)
			self.seqTable.setItem(row, 2, item3)
			self.seqTable.setCurrentItem(item1)
			self.okBtn.setEnabled(True)
			self.upBtn.setEnabled(True)
			self.downBtn.setEnabled(True)
		if not self.delBtn.isEnabled():
			self.delBtn.setEnabled(True)
		
	def onUp(self):
		print('Up button pressed!')
		if self.seqTable.rowCount()==0: return
		row = self.seqTable.currentRow()
		column = self.seqTable.currentColumn()
		if row == 0 or row == -1: return
		elif self.seqTable.isActiveWindow():
			t = []
			t.append(self.seqTable.item(row,0).text())
			t.append(self.seqTable.item(row,1).text())
			t.append(self.seqTable.item(row,2).text())
			self.seqTable.item(row,0).setText(self.seqTable.item(row-1,0).text())
			self.seqTable.item(row,1).setText(self.seqTable.item(row-1,1).text())
			self.seqTable.item(row,2).setText(self.seqTable.item(row-1,2).text())
			self.seqTable.item(row-1,0).setText(t[0])
			self.seqTable.item(row-1,1).setText(t[1])
			self.seqTable.item(row-1,2).setText(t[2])
			self.seqTable.setCurrentCell(row-1,column)
		
	def onDown(self):
		print('Down button pressed!')
		if self.seqTable.rowCount()==0: return
		row = self.seqTable.currentRow()
		column = self.seqTable.currentColumn()
		if row==self.seqTable.rowCount()-1 or row == -1: return
		elif self.seqTable.isActiveWindow():
			t = []
			t.append(self.seqTable.item(row,0).text())
			t.append(self.seqTable.item(row,1).text())
			t.append(self.seqTable.item(row,2).text())
			self.seqTable.item(row,0).setText(self.seqTable.item(row+1,0).text())
			self.seqTable.item(row,1).setText(self.seqTable.item(row+1,1).text())
			self.seqTable.item(row,2).setText(self.seqTable.item(row+1,2).text())
			self.seqTable.item(row+1,0).setText(t[0])
			self.seqTable.item(row+1,1).setText(t[1])
			self.seqTable.item(row+1,2).setText(t[2])
			self.seqTable.setCurrentCell(row+1,column)

	def onLoad(self):
		print('Load button pressed!')
		r = 0
		fileName = QtWidgets.QFileDialog.getOpenFileName(self,
		"Specify Existing Sequence File",".", "Sequence file(*.lsq)")[0]
		lines=[]
		self.seqTable.setRowCount(0)
		if fileName:
			# QFile *file=new QFile(fileName);
			# file->open(QIODevice::ReadOnly|QIODevice::Text);
			# QTextStream *in=new QTextStream(file);
			with open(fileName, 'r') as f:
				lines = f.readlines()
			for l in lines:		
				self.seqTable.insertRow(r)
				s = l.split('@')
				item0 = QtWidgets.QTableWidgetItem(s[0])
				item1 = QtWidgets.QTableWidgetItem(s[1])
				item2 = QtWidgets.QTableWidgetItem(s[2][:-1])
				self.seqTable.setItem(r, 0, item0)
				self.seqTable.setItem(r, 1, item1)
				self.seqTable.setItem(r, 2, item2)
				r = self.seqTable.rowCount()
			self.okBtn.setEnabled(True)
			self.delBtn.setEnabled(True)
			self.upBtn.setEnabled(True)
			self.downBtn.setEnabled(True)
		
	def onSave(self):
		print('Save button pressed!')
		line = '{0}@{1}@{2}\n'.format
		fileName = QtWidgets.QFileDialog.getSaveFileName(self,
			"Specify Output File Name",".", "Sequence file(*.lsq)")[0]
		if fileName:
			with open(fileName, 'w') as f:
				for r in range(self.seqTable.rowCount()):
					f.write(line(self.seqTable.item(r, 0).text(), 
					self.seqTable.item(r, 1).text(), 
					self.seqTable.item(r, 2).text()))
					
				
				
	def onDel(self):
		print('Delete button pressed!')
		row = self.seqTable.currentRow()
		self.seqTable.removeRow(row)
		if self.seqTable.rowCount() == 0:
			self.upBtn.setEnabled(False)
			self.downBtn.setEnabled(False)
			self.delBtn.setEnabled(False)
		
	def onScan(self):
		#print('Scan button pressed!')
		self.devList.clear()
		self.addBtn.setEnabled(True) #only for test purposes!
		try:
			self.dev_list = self.rm.list_resources()
			self.devList.addItems(self.dev_list)
			self.addBtn.setEnabled(True)
			#self.current_instr=self.devList.currentText()
		except Exception:
			print('Error reading device list!')
		
		
	def printSequence(self):
		r = self.seqTable.rowCount()
		line = '({0}) Read \"{1}\" with instrument \"{2}\", command: \"{3}\"'.format
		s = []
		if r:
			for i in range(r):
				s.append(line(i+1, self.seqTable.item(i, 1).text(), 
				self.seqTable.item(i, 0).text(), 
				self.seqTable.item(i, 2).text()))
		return s	
	
	def makeDataStruct(self):
		r = self.seqTable.rowCount()
		ds = []
		for i in range(r):
			if not self.seqTable.item(i,2).text().lower() == 'snap?10,11':
				d={'instr': self.seqTable.item(i,0).text(),
				'var': self.seqTable.item(i,1).text(),
				'command': self.seqTable.item(i,2).text(),
				'data': []}
				ds.append(d)
			else:
				d1={'instr': self.seqTable.item(i,0).text(),
				'var': self.seqTable.item(i,1).text() + '_Ch1',
				'command': '2s_' + self.seqTable.item(i,2).text(),
				'data': []}
				d2={'instr': self.seqTable.item(i,0).text(),
				'var': self.seqTable.item(i,1).text() + '_Ch2',
				'command': '2e_' + self.seqTable.item(i,2).text(),
				'data': []}
				ds.append(d1)
				ds.append(d2)
			
		return ds
		
	def setCommandList(self):
		try:
			inst = self.rm.open_resource(self.devList.currentText())
			id_str = inst.query("*IDN?")
			self.idEdit.setText(id_str)
		except Exception:
			self.idEdit.setText('Instrument unidentified!')
			id_str = ''
		lst=[]
		string = id_str.lower()
		print(string)
		if not string.find("sr830")==-1:
			lst = ["OUTP?1", "OUTR?1", "SNAP?10,11", "OAUX?1", "AUXV?1", 
			"PHAS?", "FREQ?", "HARM?", "SLVL?"]
		elif not string.find("model 2000")==-1:
			lst = [":FETCh?", ":READ?", ":MEASure:VOLTage:AC?", ":MEASure:CURRent:DC?", 
			":MEASure:RESistance?", ":MEASure:FRESistance?"]
		elif not string.find("model340")==-1:
			lst = ["KRDG?A", "SRDG?A", "KRDG?B", "SRDG?B", "SETP?1", "MOUT?1", "HTR?"]
		else:
			lst = ['Some command']
		self.commands.clear()
		self.commands.addItems(lst)
    
